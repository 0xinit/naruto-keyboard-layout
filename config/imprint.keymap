#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_number_row_full_bottom_row;
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp EQUAL    &kp N1    &kp N2    &kp N3    &kp N4  &kp N5                                         &kp N6      &kp N7     &kp N8    &kp N9   &kp N0   &kp MINUS
 &kp TAB    &kp Q     &kp W     &kp E     &kp R   &kp T                                          &kp Y       &kp U      &kp I     &kp O    &kp P    &kp BSLH
 &kp ESC  &kp A     &kp S     &kp D     &kp F   &kp G                                          &kp H       &kp J      &kp K     &kp L    &kp SEMI &kp SQT
 &kp LSHFT  &kp Z     &kp X     &kp C     &kp V   &kp B                                          &kp N       &kp M      &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
 &kp LCTRL     &kp GRAVE &kp CAPS  &kp LEFT  &kp RIGHT                                &kp UP   &kp DOWN   &kp LBKT  &kp RBKT  &mo 3
                                                  &kp BSPC &kp DEL &kp LGUI    &kp PG_UP &kp RET  &kp SPACE
                                                  &kp LALT &kp HOME &kp END     &kp PG_DN  &mo 2    &mo 1
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans   &kp KP_EQUAL  &kp BSLH   &kp KP_MULTIPLY &trans
 &trans  &trans  &kp HOME &kp UP   &kp END  &trans                                     &trans  &kp KP_N7 &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &trans
 &trans  &trans  &kp LEFT &kp DOWN &kp RIGHT &trans                                     &trans  &kp KP_N4 &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &trans
 &trans  &trans  &kp PG_DN &kp INS &kp DEL  &trans                                     &trans  &kp KP_N1 &kp KP_N2  &kp KP_N3  &kp KP_ENTER    &trans
&trans  &trans  &trans  &kp PG_UP  &trans                            &trans    &trans    &trans     &trans  &trans
                                      &trans  &trans &trans       &trans  &trans &kp KP_N0
                                      &trans  &trans &trans       &trans  &trans &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4           &trans         &rgb_ug RGB_TOG  &rgb_ug RGB_EFF &trans          &trans          &trans
 &sys_reset      &trans  &trans  &trans  &trans  &studio_unlock                             &studio_unlock &rgb_ug RGB_HUI  &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &sys_reset
 &bootloader &trans  &trans  &trans  &trans  &trans                                     &trans         &rgb_ug RGB_HUD  &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &bootloader
 &to 4      &trans  &trans  &trans  &trans  &trans                                     &trans         &trans           &trans          &trans          &trans          &to 4
&to 4        &trans        &trans        &trans        &trans                                        &trans           &trans           &trans           &trans           &to 4
                                         &trans  &trans &trans        &trans &trans &trans
                                         &trans  &trans &trans        &trans &trans &trans
            >;
        };

        Shortcut_Layer {
            bindings = <
 &kp F12  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                                         &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
 &trans   &trans   &trans   &trans  &kp LG(LS(Z))   &trans                                         &kp C_PREV  &trans  &trans   &trans   &trans   &trans
 &trans   &trans  &trans   &trans   &trans   &trans                                         &kp C_PP   &trans  &trans   &trans   &trans   &trans
 &trans   &kp LG(Z) &kp LG(X) &kp LG(C) &kp LG(V) &trans                                     &kp C_NEXT &trans  &trans   &trans   &kp LG(LS(N4))  &trans
 &kp PSCRN   &trans  &trans  &trans  &trans                                   &kp C_VOL_UP   &kp C_VOL_DN   &kp C_MUTE  &kp LG(LS(N4))  &mo 3
                                                  &trans  &trans &trans    &trans &trans &kp LG(SPACE)
                                                  &trans  &trans &trans    &trans &trans &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
                                         &mkp LCLK  &mkp MCLK &mkp RCLK        &trans &trans &trans
                                         &trans  &trans &trans        &trans &trans &trans
            >;
        };

        factory_test {
            bindings = <
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7            &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9            &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1            &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4                            &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                                &kp N1  &kp N2  &kp N3    &kp N4  &kp N5  &kp N6
                                &kp N7  &kp N8  &kp N9    &kp N0  &kp N1  &kp N2
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // activate layer 3 within 500ms of the trackball moving
        <&zip_temp_layer 3 100>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
